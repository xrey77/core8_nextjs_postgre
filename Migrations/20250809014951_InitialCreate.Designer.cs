// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using core8_nextjs_postgre.Helpers;

#nullable disable

namespace core8_nextjs_postgre.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250809014951_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("core8_nextjs_postgre.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AlertStocks")
                        .HasColumnType("integer")
                        .HasColumnName("alertStocks");

                    b.Property<string>("Category")
                        .HasColumnType("varchar")
                        .HasColumnName("category");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("costPrice");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("createdAt");

                    b.Property<int>("CriticalStocks")
                        .HasColumnType("integer")
                        .HasColumnName("criticalStocks");

                    b.Property<string>("Descriptions")
                        .HasColumnType("varchar")
                        .HasColumnName("descriptions");

                    b.Property<string>("ProductPicture")
                        .HasColumnType("varchar")
                        .HasColumnName("productPicture");

                    b.Property<int>("Qty")
                        .HasColumnType("integer")
                        .HasColumnName("qty");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("salePrice");

                    b.Property<decimal>("SellPrice")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("sellPrice");

                    b.Property<string>("Unit")
                        .HasColumnType("varchar")
                        .HasColumnName("unit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updatedAt");

                    b.HasKey("Id");

                    b.ToTable("products");
                });

            modelBuilder.Entity("core8_nextjs_postgre.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("createdAt");

                    b.Property<string>("Email")
                        .HasColumnType("varchar")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar")
                        .HasColumnName("firstname");

                    b.Property<int>("Isactivated")
                        .HasColumnType("integer")
                        .HasColumnName("isactivated");

                    b.Property<int>("Isblocked")
                        .HasColumnType("integer")
                        .HasColumnName("isblocked");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar")
                        .HasColumnName("lastname");

                    b.Property<int>("Mailtoken")
                        .HasColumnType("integer")
                        .HasColumnName("mailtoken");

                    b.Property<string>("Mobile")
                        .HasColumnType("varchar")
                        .HasColumnName("mobile");

                    b.Property<string>("Password")
                        .HasColumnType("varchar")
                        .HasColumnName("password");

                    b.Property<string>("Profilepic")
                        .HasColumnType("varchar")
                        .HasColumnName("profilepic");

                    b.Property<string>("Qrcodeurl")
                        .HasColumnType("varchar")
                        .HasColumnName("qrcodeurl");

                    b.Property<string>("Roles")
                        .HasColumnType("varchar")
                        .HasColumnName("roles");

                    b.Property<string>("Secretkey")
                        .HasColumnType("text")
                        .HasColumnName("secretkey");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updatedAt");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
